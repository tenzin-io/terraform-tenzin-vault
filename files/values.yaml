server:
  image:
    tag: "1.15"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: ${cert_issuer_name}
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "120"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "180"

    hosts:
      - host: ${vault_fqdn}

    tls:
    - hosts:
      - ${vault_fqdn}
      secretName: vault-tls-secret

  standalone:
    enabled: true
    config: |
      ui = true

      listener "tcp" {
        tls_disable = 1
        address = "[::]:8200"
        cluster_address = "[::]:8201"

        # Enable unauthenticated metrics access (necessary for Prometheus Operator)
        telemetry {
          unauthenticated_metrics_access = true
        }
      }

      storage "file" {
        path = "/vault/data"
      }

      plugin_directory = "/usr/local/libexec/vault"
      disable_mlock = true

      # Configuration for enabling Prometheus metrics
      telemetry {
        prometheus_retention_time = "30s"
        disable_hostname = true
      }

  logFormat: json
  logLevel: trace

  extraInitContainers:
    - name: vault-restore
      image: "bitnami/git"
      command: [bash, -x, -c]
      args:
        - if [[ ! -z "${vault_backup_repo_url}" && ! -d /vault/data/.git ]]; then rm -rf /vault/data/*; git clone ${vault_backup_repo_url} /vault/data; else exit 0; fi
      volumeMounts:
        - name: data
          mountPath: /vault/data

  volumes:
    - name: plugins
      emptyDir: {}

  volumeMounts:
    - mountPath: /usr/local/libexec/vault
      name: plugins
      readOnly: true

ui:
  enabled: true

injector:
  enabled: false
